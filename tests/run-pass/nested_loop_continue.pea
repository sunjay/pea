/// Prints all pairs (x, y) such that 1 <= x <= a, 1 <= y <= b. Skips printing if x*y == filter_value.
fn print_pairs_until(a, b, filter_value) {
    let x = 1;
    //TODO: This could be rewritten as a for...in loop once those are supported
    while x <= a {
        let y = 1;
        while y <= b {
            let product = x*y;
            if product == filter_value {
                // still need to increase the loop counter, otherwise loop will run forever
                y = y + 1;
                continue;

                // These statements should never be reached
                let _unreachable = 3;
                println!(_unreachable);
            }

            println!(x);
            println!(y);

            // Creating extra locals that the continue above should not count when figuring out how
            // much to pop
            let next_y = y + 1;
            y = next_y;
        }

        x = x + 1;
    }
}

fn main() {
    println!(b"Printing pairs for (3, 2) without x*y == 2");
    print_pairs_until(3, 2, 2);
    println!(b"Printing pairs for (2, 3) without x*y == 1");
    print_pairs_until(2, 3, 1);
    println!(b"Printing pairs for (2, 2) without x*y == 9");
    print_pairs_until(2, 2, 9);
}
